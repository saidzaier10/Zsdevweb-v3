# Generated by Django 5.1 on 2025-10-29 21:08

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Zsdevweb', max_length=200)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='company/logos/')),
                ('email', models.EmailField(default='contact@zsdevweb.com', max_length=254)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('address', models.TextField(blank=True)),
                ('siret', models.CharField(blank=True, max_length=14)),
                ('tva_number', models.CharField(blank=True, max_length=20, verbose_name='Numéro TVA')),
                ('primary_color', models.CharField(default='#1a56db', help_text='Couleur hexadécimale', max_length=7)),
                ('footer_text', models.TextField(blank=True, default='Merci de votre confiance | www.zsdevweb.com')),
                ('email_signature', models.TextField(blank=True, default="Cordialement,\nL'équipe Zsdevweb")),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Entreprise',
                'verbose_name_plural': 'Entreprise',
            },
        ),
        migrations.CreateModel(
            name='ComplexityLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField()),
                ('price_multiplier', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(1)])),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Niveau de complexité',
                'verbose_name_plural': 'Niveaux de complexité',
                'ordering': ['price_multiplier'],
            },
        ),
        migrations.CreateModel(
            name='DesignOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField()),
                ('price_supplement', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Option de design',
                'verbose_name_plural': 'Options de design',
                'ordering': ['price_supplement'],
            },
        ),
        migrations.CreateModel(
            name='ProjectType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField()),
                ('base_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('estimated_days', models.IntegerField(default=10, help_text='Nombre de jours estimés')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Type de projet',
                'verbose_name_plural': 'Types de projets',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SupplementaryOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('billing_type', models.CharField(choices=[('one_time', 'Paiement unique'), ('monthly', 'Mensuel'), ('yearly', 'Annuel')], default='one_time', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Option supplémentaire',
                'verbose_name_plural': 'Options supplémentaires',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Quote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_name', models.CharField(max_length=200, verbose_name='Nom du client')),
                ('client_email', models.EmailField(max_length=254, verbose_name='Email du client')),
                ('client_phone', models.CharField(blank=True, max_length=20, verbose_name='Téléphone')),
                ('company_name', models.CharField(blank=True, max_length=200, verbose_name="Nom de l'entreprise")),
                ('client_address', models.TextField(blank=True, verbose_name='Adresse')),
                ('project_description', models.TextField(verbose_name='Description du projet')),
                ('deadline', models.DateField(blank=True, null=True, verbose_name='Date limite souhaitée')),
                ('subtotal_ht', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Sous-total HT')),
                ('discount_type', models.CharField(blank=True, choices=[('percent', 'Pourcentage'), ('fixed', 'Montant fixe')], max_length=10, verbose_name='Type de remise')),
                ('discount_value', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Valeur de la remise')),
                ('discount_reason', models.CharField(blank=True, help_text='Ex: Client fidèle, Promotion, etc.', max_length=200, verbose_name='Raison de la remise')),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Montant de la remise')),
                ('tva_rate', models.DecimalField(decimal_places=2, default=Decimal('20.00'), max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Taux TVA (%)')),
                ('tva_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Montant TVA')),
                ('total_ttc', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Total TTC')),
                ('payment_first', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='1er paiement (30%)')),
                ('payment_second', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='2ème paiement (40%)')),
                ('payment_final', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Paiement final (30%)')),
                ('estimated_duration_days', models.IntegerField(default=0, verbose_name='Durée estimée (jours)')),
                ('estimated_start_date', models.DateField(blank=True, null=True, verbose_name='Date de début estimée')),
                ('estimated_end_date', models.DateField(blank=True, null=True, verbose_name='Date de fin estimée')),
                ('pdf_file', models.FileField(blank=True, null=True, upload_to='quotes/pdf/%Y/%m/', verbose_name='Fichier PDF')),
                ('signature_token', models.CharField(blank=True, max_length=100, unique=True, verbose_name='Token de signature')),
                ('signature_image', models.ImageField(blank=True, null=True, upload_to='quotes/signatures/', verbose_name='Image de la signature')),
                ('signed_at', models.DateTimeField(blank=True, null=True, verbose_name='Signé le')),
                ('client_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP du client')),
                ('status', models.CharField(choices=[('draft', 'Brouillon'), ('sent', 'Envoyé'), ('viewed', 'Consulté'), ('accepted', 'Accepté'), ('rejected', 'Refusé'), ('expired', 'Expiré')], default='draft', max_length=20, verbose_name='Statut')),
                ('quote_number', models.CharField(blank=True, max_length=50, unique=True, verbose_name='Numéro de devis')),
                ('expires_at', models.DateTimeField(blank=True, null=True, verbose_name='Expire le')),
                ('internal_notes', models.TextField(blank=True, help_text='Visible uniquement par les admins', verbose_name='Notes internes')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('sent_at', models.DateTimeField(blank=True, null=True, verbose_name='Envoyé le')),
                ('viewed_at', models.DateTimeField(blank=True, null=True, verbose_name='Consulté le')),
                ('accepted_at', models.DateTimeField(blank=True, null=True, verbose_name='Accepté le')),
                ('rejected_at', models.DateTimeField(blank=True, null=True, verbose_name='Refusé le')),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_quotes', to=settings.AUTH_USER_MODEL, verbose_name='Assigné à')),
                ('complexity_level', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='quotes.complexitylevel', verbose_name='Niveau de complexité')),
                ('design_option', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='quotes.designoption', verbose_name='Option de design')),
                ('project_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='quotes.projecttype', verbose_name='Type de projet')),
            ],
            options={
                'verbose_name': 'Devis',
                'verbose_name_plural': 'Devis',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='QuoteEmailLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_type', models.CharField(choices=[('created', 'Création du devis'), ('reminder', 'Rappel'), ('accepted', 'Acceptation'), ('rejected', 'Refus')], max_length=20)),
                ('recipient', models.EmailField(max_length=254)),
                ('subject', models.CharField(max_length=200)),
                ('sent_at', models.DateTimeField(auto_now_add=True)),
                ('success', models.BooleanField(default=True)),
                ('error_message', models.TextField(blank=True)),
                ('quote', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_logs', to='quotes.quote')),
            ],
            options={
                'verbose_name': "Log d'email",
                'verbose_name_plural': "Logs d'emails",
                'ordering': ['-sent_at'],
            },
        ),
        migrations.CreateModel(
            name='QuoteTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='Nom du template')),
                ('description', models.TextField(blank=True)),
                ('default_description', models.TextField(help_text='Texte prérempli pour ce type de projet', verbose_name='Description par défaut')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('complexity_level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quotes.complexitylevel')),
                ('design_option', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quotes.designoption')),
                ('project_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quotes.projecttype')),
                ('supplementary_options', models.ManyToManyField(blank=True, to='quotes.supplementaryoption')),
            ],
            options={
                'verbose_name': 'Template de devis',
                'verbose_name_plural': 'Templates de devis',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='quote',
            name='template',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='quotes.quotetemplate', verbose_name='Créé depuis le template'),
        ),
        migrations.AddField(
            model_name='quote',
            name='supplementary_options',
            field=models.ManyToManyField(blank=True, to='quotes.supplementaryoption', verbose_name='Options supplémentaires'),
        ),
    ]
